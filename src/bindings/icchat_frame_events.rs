/* automatically generated by rust-bindgen 0.72.0 */

pub type wchar_t = ::std::os::raw::c_ushort;
pub type ULONG = ::std::os::raw::c_ulong;
pub type USHORT = ::std::os::raw::c_ushort;
pub type DWORD = ::std::os::raw::c_ulong;
pub type BOOL = ::std::os::raw::c_int;
pub type BYTE = ::std::os::raw::c_uchar;
pub type WORD = ::std::os::raw::c_ushort;
pub type FLOAT = f32;
pub type INT = ::std::os::raw::c_int;
pub type UINT = ::std::os::raw::c_uint;
pub type ULONG_PTR = ::std::os::raw::c_ulong;
pub type PVOID = *mut ::std::os::raw::c_void;
pub type CHAR = ::std::os::raw::c_char;
pub type SHORT = ::std::os::raw::c_short;
pub type LONG = ::std::os::raw::c_long;
pub type WCHAR = wchar_t;
pub type HRESULT = ::std::os::raw::c_long;
pub type LCID = DWORD;
pub type LONGLONG = ::std::os::raw::c_longlong;
pub type ULONGLONG = ::std::os::raw::c_ulonglong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _GUID {
    pub Data1: ::std::os::raw::c_ulong,
    pub Data2: ::std::os::raw::c_ushort,
    pub Data3: ::std::os::raw::c_ushort,
    pub Data4: [::std::os::raw::c_uchar; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _GUID"][::std::mem::size_of::<_GUID>() - 16usize];
    ["Alignment of _GUID"][::std::mem::align_of::<_GUID>() - 4usize];
    ["Offset of field: _GUID::Data1"][::std::mem::offset_of!(_GUID, Data1) - 0usize];
    ["Offset of field: _GUID::Data2"][::std::mem::offset_of!(_GUID, Data2) - 4usize];
    ["Offset of field: _GUID::Data3"][::std::mem::offset_of!(_GUID, Data3) - 6usize];
    ["Offset of field: _GUID::Data4"][::std::mem::offset_of!(_GUID, Data4) - 8usize];
};
pub type GUID = _GUID;
pub type IID = GUID;
pub type OLECHAR = WCHAR;
pub type LPOLESTR = *mut OLECHAR;
pub type LPCOLESTR = *const OLECHAR;
pub type DOUBLE = f64;
pub type SCODE = LONG;
pub type DATE = f64;
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagCY {
    pub __bindgen_anon_1: tagCY__bindgen_ty_1,
    pub int64: LONGLONG,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagCY__bindgen_ty_1 {
    pub Lo: ULONG,
    pub Hi: LONG,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagCY__bindgen_ty_1"][::std::mem::size_of::<tagCY__bindgen_ty_1>() - 8usize];
    ["Alignment of tagCY__bindgen_ty_1"][::std::mem::align_of::<tagCY__bindgen_ty_1>() - 4usize];
    ["Offset of field: tagCY__bindgen_ty_1::Lo"]
        [::std::mem::offset_of!(tagCY__bindgen_ty_1, Lo) - 0usize];
    ["Offset of field: tagCY__bindgen_ty_1::Hi"]
        [::std::mem::offset_of!(tagCY__bindgen_ty_1, Hi) - 4usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagCY"][::std::mem::size_of::<tagCY>() - 8usize];
    ["Alignment of tagCY"][::std::mem::align_of::<tagCY>() - 8usize];
    ["Offset of field: tagCY::int64"][::std::mem::offset_of!(tagCY, int64) - 0usize];
};
pub type CY = tagCY;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagDEC {
    pub wReserved: USHORT,
    pub __bindgen_anon_1: tagDEC__bindgen_ty_1,
    pub Hi32: ULONG,
    pub __bindgen_anon_2: tagDEC__bindgen_ty_2,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagDEC__bindgen_ty_1 {
    pub __bindgen_anon_1: tagDEC__bindgen_ty_1__bindgen_ty_1,
    pub signscale: USHORT,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagDEC__bindgen_ty_1__bindgen_ty_1 {
    pub scale: BYTE,
    pub sign: BYTE,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagDEC__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::size_of::<tagDEC__bindgen_ty_1__bindgen_ty_1>() - 2usize];
    ["Alignment of tagDEC__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<tagDEC__bindgen_ty_1__bindgen_ty_1>() - 1usize];
    ["Offset of field: tagDEC__bindgen_ty_1__bindgen_ty_1::scale"]
        [::std::mem::offset_of!(tagDEC__bindgen_ty_1__bindgen_ty_1, scale) - 0usize];
    ["Offset of field: tagDEC__bindgen_ty_1__bindgen_ty_1::sign"]
        [::std::mem::offset_of!(tagDEC__bindgen_ty_1__bindgen_ty_1, sign) - 1usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagDEC__bindgen_ty_1"][::std::mem::size_of::<tagDEC__bindgen_ty_1>() - 2usize];
    ["Alignment of tagDEC__bindgen_ty_1"][::std::mem::align_of::<tagDEC__bindgen_ty_1>() - 2usize];
    ["Offset of field: tagDEC__bindgen_ty_1::signscale"]
        [::std::mem::offset_of!(tagDEC__bindgen_ty_1, signscale) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagDEC__bindgen_ty_2 {
    pub __bindgen_anon_1: tagDEC__bindgen_ty_2__bindgen_ty_1,
    pub Lo64: ULONGLONG,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagDEC__bindgen_ty_2__bindgen_ty_1 {
    pub Lo32: ULONG,
    pub Mid32: ULONG,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagDEC__bindgen_ty_2__bindgen_ty_1"]
        [::std::mem::size_of::<tagDEC__bindgen_ty_2__bindgen_ty_1>() - 8usize];
    ["Alignment of tagDEC__bindgen_ty_2__bindgen_ty_1"]
        [::std::mem::align_of::<tagDEC__bindgen_ty_2__bindgen_ty_1>() - 4usize];
    ["Offset of field: tagDEC__bindgen_ty_2__bindgen_ty_1::Lo32"]
        [::std::mem::offset_of!(tagDEC__bindgen_ty_2__bindgen_ty_1, Lo32) - 0usize];
    ["Offset of field: tagDEC__bindgen_ty_2__bindgen_ty_1::Mid32"]
        [::std::mem::offset_of!(tagDEC__bindgen_ty_2__bindgen_ty_1, Mid32) - 4usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagDEC__bindgen_ty_2"][::std::mem::size_of::<tagDEC__bindgen_ty_2>() - 8usize];
    ["Alignment of tagDEC__bindgen_ty_2"][::std::mem::align_of::<tagDEC__bindgen_ty_2>() - 8usize];
    ["Offset of field: tagDEC__bindgen_ty_2::Lo64"]
        [::std::mem::offset_of!(tagDEC__bindgen_ty_2, Lo64) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagDEC"][::std::mem::size_of::<tagDEC>() - 16usize];
    ["Alignment of tagDEC"][::std::mem::align_of::<tagDEC>() - 8usize];
    ["Offset of field: tagDEC::wReserved"][::std::mem::offset_of!(tagDEC, wReserved) - 0usize];
    ["Offset of field: tagDEC::Hi32"][::std::mem::offset_of!(tagDEC, Hi32) - 4usize];
};
pub type DECIMAL = tagDEC;
pub type BSTR = *mut OLECHAR;
pub type VARIANT_BOOL = ::std::os::raw::c_short;
pub type VARTYPE = ::std::os::raw::c_ushort;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct IUnknownVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IUnknown,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut IUnknown) -> ULONG>,
    pub Release: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut IUnknown) -> ULONG>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of IUnknownVtbl"][::std::mem::size_of::<IUnknownVtbl>() - 12usize];
    ["Alignment of IUnknownVtbl"][::std::mem::align_of::<IUnknownVtbl>() - 4usize];
    ["Offset of field: IUnknownVtbl::QueryInterface"]
        [::std::mem::offset_of!(IUnknownVtbl, QueryInterface) - 0usize];
    ["Offset of field: IUnknownVtbl::AddRef"]
        [::std::mem::offset_of!(IUnknownVtbl, AddRef) - 4usize];
    ["Offset of field: IUnknownVtbl::Release"]
        [::std::mem::offset_of!(IUnknownVtbl, Release) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IUnknown {
    pub lpVtbl: *mut IUnknownVtbl,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of IUnknown"][::std::mem::size_of::<IUnknown>() - 4usize];
    ["Alignment of IUnknown"][::std::mem::align_of::<IUnknown>() - 4usize];
    ["Offset of field: IUnknown::lpVtbl"][::std::mem::offset_of!(IUnknown, lpVtbl) - 0usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagSAFEARRAYBOUND {
    pub cElements: ULONG,
    pub lLbound: LONG,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagSAFEARRAYBOUND"][::std::mem::size_of::<tagSAFEARRAYBOUND>() - 8usize];
    ["Alignment of tagSAFEARRAYBOUND"][::std::mem::align_of::<tagSAFEARRAYBOUND>() - 4usize];
    ["Offset of field: tagSAFEARRAYBOUND::cElements"]
        [::std::mem::offset_of!(tagSAFEARRAYBOUND, cElements) - 0usize];
    ["Offset of field: tagSAFEARRAYBOUND::lLbound"]
        [::std::mem::offset_of!(tagSAFEARRAYBOUND, lLbound) - 4usize];
};
pub type SAFEARRAYBOUND = tagSAFEARRAYBOUND;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagSAFEARRAY {
    pub cDims: USHORT,
    pub fFeatures: USHORT,
    pub cbElements: ULONG,
    pub cLocks: ULONG,
    pub pvData: PVOID,
    pub rgsabound: [SAFEARRAYBOUND; 1usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagSAFEARRAY"][::std::mem::size_of::<tagSAFEARRAY>() - 24usize];
    ["Alignment of tagSAFEARRAY"][::std::mem::align_of::<tagSAFEARRAY>() - 4usize];
    ["Offset of field: tagSAFEARRAY::cDims"][::std::mem::offset_of!(tagSAFEARRAY, cDims) - 0usize];
    ["Offset of field: tagSAFEARRAY::fFeatures"]
        [::std::mem::offset_of!(tagSAFEARRAY, fFeatures) - 2usize];
    ["Offset of field: tagSAFEARRAY::cbElements"]
        [::std::mem::offset_of!(tagSAFEARRAY, cbElements) - 4usize];
    ["Offset of field: tagSAFEARRAY::cLocks"]
        [::std::mem::offset_of!(tagSAFEARRAY, cLocks) - 8usize];
    ["Offset of field: tagSAFEARRAY::pvData"]
        [::std::mem::offset_of!(tagSAFEARRAY, pvData) - 12usize];
    ["Offset of field: tagSAFEARRAY::rgsabound"]
        [::std::mem::offset_of!(tagSAFEARRAY, rgsabound) - 16usize];
};
pub type SAFEARRAY = tagSAFEARRAY;
pub type VARIANT = tagVARIANT;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagVARIANT {
    pub __bindgen_anon_1: tagVARIANT__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagVARIANT__bindgen_ty_1 {
    pub __bindgen_anon_1: tagVARIANT__bindgen_ty_1__bindgen_ty_1,
    pub decVal: DECIMAL,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagVARIANT__bindgen_ty_1__bindgen_ty_1 {
    pub vt: VARTYPE,
    pub wReserved1: WORD,
    pub wReserved2: WORD,
    pub wReserved3: WORD,
    pub __bindgen_anon_1: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1 {
    pub llVal: LONGLONG,
    pub lVal: LONG,
    pub bVal: BYTE,
    pub iVal: SHORT,
    pub fltVal: FLOAT,
    pub dblVal: DOUBLE,
    pub boolVal: VARIANT_BOOL,
    pub __OBSOLETE__VARIANT_BOOL: VARIANT_BOOL,
    pub scode: SCODE,
    pub cyVal: CY,
    pub date: DATE,
    pub bstrVal: BSTR,
    pub punkVal: *mut IUnknown,
    pub pdispVal: *mut IDispatch,
    pub parray: *mut SAFEARRAY,
    pub pbVal: *mut BYTE,
    pub piVal: *mut SHORT,
    pub plVal: *mut LONG,
    pub pllVal: *mut LONGLONG,
    pub pfltVal: *mut FLOAT,
    pub pdblVal: *mut DOUBLE,
    pub pboolVal: *mut VARIANT_BOOL,
    pub __OBSOLETE__VARIANT_PBOOL: *mut VARIANT_BOOL,
    pub pscode: *mut SCODE,
    pub pcyVal: *mut CY,
    pub pdate: *mut DATE,
    pub pbstrVal: *mut BSTR,
    pub ppunkVal: *mut *mut IUnknown,
    pub ppdispVal: *mut *mut IDispatch,
    pub pparray: *mut *mut SAFEARRAY,
    pub pvarVal: *mut VARIANT,
    pub byref: PVOID,
    pub cVal: CHAR,
    pub uiVal: USHORT,
    pub ulVal: ULONG,
    pub ullVal: ULONGLONG,
    pub intVal: INT,
    pub uintVal: UINT,
    pub pdecVal: *mut DECIMAL,
    pub pcVal: *mut CHAR,
    pub puiVal: *mut USHORT,
    pub pulVal: *mut ULONG,
    pub pullVal: *mut ULONGLONG,
    pub pintVal: *mut INT,
    pub puintVal: *mut UINT,
    pub __bindgen_anon_1: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1 {
    pub pvRecord: PVOID,
    pub pRecInfo: *mut IRecordInfo,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::size_of::<tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1>(
        ) - 8usize];
    ["Alignment of tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1>(
        ) - 4usize];
    [
        "Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pvRecord",
    ][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pvRecord
    ) - 0usize];
    [
        "Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pRecInfo",
    ][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pRecInfo
    ) - 4usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::size_of::<tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1>() - 8usize];
    ["Alignment of tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1>() - 8usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::llVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        llVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::lVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        lVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::bVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        bVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::iVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        iVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::fltVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        fltVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::dblVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        dblVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::boolVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        boolVal
    ) - 0usize];
    [
        "Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::__OBSOLETE__VARIANT_BOOL",
    ][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        __OBSOLETE__VARIANT_BOOL
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::scode"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        scode
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::cyVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        cyVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::date"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        date
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::bstrVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        bstrVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::punkVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        punkVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pdispVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pdispVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::parray"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        parray
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pbVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pbVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::piVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        piVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::plVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        plVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pllVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pllVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pfltVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pfltVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pdblVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pdblVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pboolVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pboolVal
    ) - 0usize];
    [
        "Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::__OBSOLETE__VARIANT_PBOOL",
    ][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        __OBSOLETE__VARIANT_PBOOL
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pscode"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pscode
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pcyVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pcyVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pdate"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pdate
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pbstrVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pbstrVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::ppunkVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        ppunkVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::ppdispVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        ppdispVal
    )
        - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pparray"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pparray
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pvarVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pvarVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::byref"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        byref
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::cVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        cVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::uiVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        uiVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::ulVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        ulVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::ullVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        ullVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::intVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        intVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::uintVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        uintVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pdecVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pdecVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pcVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pcVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::puiVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        puiVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pulVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pulVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pullVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pullVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::pintVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        pintVal
    ) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1::puintVal"][::std::mem::offset_of!(
        tagVARIANT__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1,
        puintVal
    ) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagVARIANT__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::size_of::<tagVARIANT__bindgen_ty_1__bindgen_ty_1>() - 16usize];
    ["Alignment of tagVARIANT__bindgen_ty_1__bindgen_ty_1"]
        [::std::mem::align_of::<tagVARIANT__bindgen_ty_1__bindgen_ty_1>() - 8usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1::vt"]
        [::std::mem::offset_of!(tagVARIANT__bindgen_ty_1__bindgen_ty_1, vt) - 0usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1::wReserved1"]
        [::std::mem::offset_of!(tagVARIANT__bindgen_ty_1__bindgen_ty_1, wReserved1) - 2usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1::wReserved2"]
        [::std::mem::offset_of!(tagVARIANT__bindgen_ty_1__bindgen_ty_1, wReserved2) - 4usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1__bindgen_ty_1::wReserved3"]
        [::std::mem::offset_of!(tagVARIANT__bindgen_ty_1__bindgen_ty_1, wReserved3) - 6usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagVARIANT__bindgen_ty_1"]
        [::std::mem::size_of::<tagVARIANT__bindgen_ty_1>() - 16usize];
    ["Alignment of tagVARIANT__bindgen_ty_1"]
        [::std::mem::align_of::<tagVARIANT__bindgen_ty_1>() - 8usize];
    ["Offset of field: tagVARIANT__bindgen_ty_1::decVal"]
        [::std::mem::offset_of!(tagVARIANT__bindgen_ty_1, decVal) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagVARIANT"][::std::mem::size_of::<tagVARIANT>() - 16usize];
    ["Alignment of tagVARIANT"][::std::mem::align_of::<tagVARIANT>() - 8usize];
};
pub type VARIANTARG = VARIANT;
pub type DISPID = LONG;
pub type MEMBERID = DISPID;
pub type HREFTYPE = DWORD;
pub const tagTYPEKIND_TKIND_ENUM: tagTYPEKIND = 0;
pub const tagTYPEKIND_TKIND_RECORD: tagTYPEKIND = 1;
pub const tagTYPEKIND_TKIND_MODULE: tagTYPEKIND = 2;
pub const tagTYPEKIND_TKIND_INTERFACE: tagTYPEKIND = 3;
pub const tagTYPEKIND_TKIND_DISPATCH: tagTYPEKIND = 4;
pub const tagTYPEKIND_TKIND_COCLASS: tagTYPEKIND = 5;
pub const tagTYPEKIND_TKIND_ALIAS: tagTYPEKIND = 6;
pub const tagTYPEKIND_TKIND_UNION: tagTYPEKIND = 7;
pub const tagTYPEKIND_TKIND_MAX: tagTYPEKIND = 8;
pub type tagTYPEKIND = ::std::os::raw::c_int;
pub use self::tagTYPEKIND as TYPEKIND;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagTYPEDESC {
    pub __bindgen_anon_1: tagTYPEDESC__bindgen_ty_1,
    pub vt: VARTYPE,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagTYPEDESC__bindgen_ty_1 {
    pub lptdesc: *mut tagTYPEDESC,
    pub lpadesc: *mut tagARRAYDESC,
    pub hreftype: HREFTYPE,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagTYPEDESC__bindgen_ty_1"]
        [::std::mem::size_of::<tagTYPEDESC__bindgen_ty_1>() - 4usize];
    ["Alignment of tagTYPEDESC__bindgen_ty_1"]
        [::std::mem::align_of::<tagTYPEDESC__bindgen_ty_1>() - 4usize];
    ["Offset of field: tagTYPEDESC__bindgen_ty_1::lptdesc"]
        [::std::mem::offset_of!(tagTYPEDESC__bindgen_ty_1, lptdesc) - 0usize];
    ["Offset of field: tagTYPEDESC__bindgen_ty_1::lpadesc"]
        [::std::mem::offset_of!(tagTYPEDESC__bindgen_ty_1, lpadesc) - 0usize];
    ["Offset of field: tagTYPEDESC__bindgen_ty_1::hreftype"]
        [::std::mem::offset_of!(tagTYPEDESC__bindgen_ty_1, hreftype) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagTYPEDESC"][::std::mem::size_of::<tagTYPEDESC>() - 8usize];
    ["Alignment of tagTYPEDESC"][::std::mem::align_of::<tagTYPEDESC>() - 4usize];
    ["Offset of field: tagTYPEDESC::vt"][::std::mem::offset_of!(tagTYPEDESC, vt) - 4usize];
};
pub type TYPEDESC = tagTYPEDESC;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagARRAYDESC {
    pub tdescElem: TYPEDESC,
    pub cDims: USHORT,
    pub rgbounds: [SAFEARRAYBOUND; 1usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagARRAYDESC"][::std::mem::size_of::<tagARRAYDESC>() - 20usize];
    ["Alignment of tagARRAYDESC"][::std::mem::align_of::<tagARRAYDESC>() - 4usize];
    ["Offset of field: tagARRAYDESC::tdescElem"]
        [::std::mem::offset_of!(tagARRAYDESC, tdescElem) - 0usize];
    ["Offset of field: tagARRAYDESC::cDims"][::std::mem::offset_of!(tagARRAYDESC, cDims) - 8usize];
    ["Offset of field: tagARRAYDESC::rgbounds"]
        [::std::mem::offset_of!(tagARRAYDESC, rgbounds) - 12usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagPARAMDESCEX {
    pub cBytes: ULONG,
    pub varDefaultValue: VARIANTARG,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagPARAMDESCEX"][::std::mem::size_of::<tagPARAMDESCEX>() - 24usize];
    ["Alignment of tagPARAMDESCEX"][::std::mem::align_of::<tagPARAMDESCEX>() - 8usize];
    ["Offset of field: tagPARAMDESCEX::cBytes"]
        [::std::mem::offset_of!(tagPARAMDESCEX, cBytes) - 0usize];
    ["Offset of field: tagPARAMDESCEX::varDefaultValue"]
        [::std::mem::offset_of!(tagPARAMDESCEX, varDefaultValue) - 8usize];
};
pub type LPPARAMDESCEX = *mut tagPARAMDESCEX;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagPARAMDESC {
    pub pparamdescex: LPPARAMDESCEX,
    pub wParamFlags: USHORT,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagPARAMDESC"][::std::mem::size_of::<tagPARAMDESC>() - 8usize];
    ["Alignment of tagPARAMDESC"][::std::mem::align_of::<tagPARAMDESC>() - 4usize];
    ["Offset of field: tagPARAMDESC::pparamdescex"]
        [::std::mem::offset_of!(tagPARAMDESC, pparamdescex) - 0usize];
    ["Offset of field: tagPARAMDESC::wParamFlags"]
        [::std::mem::offset_of!(tagPARAMDESC, wParamFlags) - 4usize];
};
pub type PARAMDESC = tagPARAMDESC;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagIDLDESC {
    pub dwReserved: ULONG_PTR,
    pub wIDLFlags: USHORT,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagIDLDESC"][::std::mem::size_of::<tagIDLDESC>() - 8usize];
    ["Alignment of tagIDLDESC"][::std::mem::align_of::<tagIDLDESC>() - 4usize];
    ["Offset of field: tagIDLDESC::dwReserved"]
        [::std::mem::offset_of!(tagIDLDESC, dwReserved) - 0usize];
    ["Offset of field: tagIDLDESC::wIDLFlags"]
        [::std::mem::offset_of!(tagIDLDESC, wIDLFlags) - 4usize];
};
pub type IDLDESC = tagIDLDESC;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagELEMDESC {
    pub tdesc: TYPEDESC,
    pub __bindgen_anon_1: tagELEMDESC__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagELEMDESC__bindgen_ty_1 {
    pub idldesc: IDLDESC,
    pub paramdesc: PARAMDESC,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagELEMDESC__bindgen_ty_1"]
        [::std::mem::size_of::<tagELEMDESC__bindgen_ty_1>() - 8usize];
    ["Alignment of tagELEMDESC__bindgen_ty_1"]
        [::std::mem::align_of::<tagELEMDESC__bindgen_ty_1>() - 4usize];
    ["Offset of field: tagELEMDESC__bindgen_ty_1::idldesc"]
        [::std::mem::offset_of!(tagELEMDESC__bindgen_ty_1, idldesc) - 0usize];
    ["Offset of field: tagELEMDESC__bindgen_ty_1::paramdesc"]
        [::std::mem::offset_of!(tagELEMDESC__bindgen_ty_1, paramdesc) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagELEMDESC"][::std::mem::size_of::<tagELEMDESC>() - 16usize];
    ["Alignment of tagELEMDESC"][::std::mem::align_of::<tagELEMDESC>() - 4usize];
    ["Offset of field: tagELEMDESC::tdesc"][::std::mem::offset_of!(tagELEMDESC, tdesc) - 0usize];
};
pub type ELEMDESC = tagELEMDESC;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagTYPEATTR {
    pub guid: GUID,
    pub lcid: LCID,
    pub dwReserved: DWORD,
    pub memidConstructor: MEMBERID,
    pub memidDestructor: MEMBERID,
    pub lpstrSchema: LPOLESTR,
    pub cbSizeInstance: ULONG,
    pub typekind: TYPEKIND,
    pub cFuncs: WORD,
    pub cVars: WORD,
    pub cImplTypes: WORD,
    pub cbSizeVft: WORD,
    pub cbAlignment: WORD,
    pub wTypeFlags: WORD,
    pub wMajorVerNum: WORD,
    pub wMinorVerNum: WORD,
    pub tdescAlias: TYPEDESC,
    pub idldescType: IDLDESC,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagTYPEATTR"][::std::mem::size_of::<tagTYPEATTR>() - 76usize];
    ["Alignment of tagTYPEATTR"][::std::mem::align_of::<tagTYPEATTR>() - 4usize];
    ["Offset of field: tagTYPEATTR::guid"][::std::mem::offset_of!(tagTYPEATTR, guid) - 0usize];
    ["Offset of field: tagTYPEATTR::lcid"][::std::mem::offset_of!(tagTYPEATTR, lcid) - 16usize];
    ["Offset of field: tagTYPEATTR::dwReserved"]
        [::std::mem::offset_of!(tagTYPEATTR, dwReserved) - 20usize];
    ["Offset of field: tagTYPEATTR::memidConstructor"]
        [::std::mem::offset_of!(tagTYPEATTR, memidConstructor) - 24usize];
    ["Offset of field: tagTYPEATTR::memidDestructor"]
        [::std::mem::offset_of!(tagTYPEATTR, memidDestructor) - 28usize];
    ["Offset of field: tagTYPEATTR::lpstrSchema"]
        [::std::mem::offset_of!(tagTYPEATTR, lpstrSchema) - 32usize];
    ["Offset of field: tagTYPEATTR::cbSizeInstance"]
        [::std::mem::offset_of!(tagTYPEATTR, cbSizeInstance) - 36usize];
    ["Offset of field: tagTYPEATTR::typekind"]
        [::std::mem::offset_of!(tagTYPEATTR, typekind) - 40usize];
    ["Offset of field: tagTYPEATTR::cFuncs"][::std::mem::offset_of!(tagTYPEATTR, cFuncs) - 44usize];
    ["Offset of field: tagTYPEATTR::cVars"][::std::mem::offset_of!(tagTYPEATTR, cVars) - 46usize];
    ["Offset of field: tagTYPEATTR::cImplTypes"]
        [::std::mem::offset_of!(tagTYPEATTR, cImplTypes) - 48usize];
    ["Offset of field: tagTYPEATTR::cbSizeVft"]
        [::std::mem::offset_of!(tagTYPEATTR, cbSizeVft) - 50usize];
    ["Offset of field: tagTYPEATTR::cbAlignment"]
        [::std::mem::offset_of!(tagTYPEATTR, cbAlignment) - 52usize];
    ["Offset of field: tagTYPEATTR::wTypeFlags"]
        [::std::mem::offset_of!(tagTYPEATTR, wTypeFlags) - 54usize];
    ["Offset of field: tagTYPEATTR::wMajorVerNum"]
        [::std::mem::offset_of!(tagTYPEATTR, wMajorVerNum) - 56usize];
    ["Offset of field: tagTYPEATTR::wMinorVerNum"]
        [::std::mem::offset_of!(tagTYPEATTR, wMinorVerNum) - 58usize];
    ["Offset of field: tagTYPEATTR::tdescAlias"]
        [::std::mem::offset_of!(tagTYPEATTR, tdescAlias) - 60usize];
    ["Offset of field: tagTYPEATTR::idldescType"]
        [::std::mem::offset_of!(tagTYPEATTR, idldescType) - 68usize];
};
pub type TYPEATTR = tagTYPEATTR;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagDISPPARAMS {
    pub rgvarg: *mut VARIANTARG,
    pub rgdispidNamedArgs: *mut DISPID,
    pub cArgs: UINT,
    pub cNamedArgs: UINT,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagDISPPARAMS"][::std::mem::size_of::<tagDISPPARAMS>() - 16usize];
    ["Alignment of tagDISPPARAMS"][::std::mem::align_of::<tagDISPPARAMS>() - 4usize];
    ["Offset of field: tagDISPPARAMS::rgvarg"]
        [::std::mem::offset_of!(tagDISPPARAMS, rgvarg) - 0usize];
    ["Offset of field: tagDISPPARAMS::rgdispidNamedArgs"]
        [::std::mem::offset_of!(tagDISPPARAMS, rgdispidNamedArgs) - 4usize];
    ["Offset of field: tagDISPPARAMS::cArgs"]
        [::std::mem::offset_of!(tagDISPPARAMS, cArgs) - 8usize];
    ["Offset of field: tagDISPPARAMS::cNamedArgs"]
        [::std::mem::offset_of!(tagDISPPARAMS, cNamedArgs) - 12usize];
};
pub type DISPPARAMS = tagDISPPARAMS;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagEXCEPINFO {
    pub wCode: WORD,
    pub wReserved: WORD,
    pub bstrSource: BSTR,
    pub bstrDescription: BSTR,
    pub bstrHelpFile: BSTR,
    pub dwHelpContext: DWORD,
    pub pvReserved: PVOID,
    pub pfnDeferredFillIn:
        ::std::option::Option<unsafe extern "stdcall" fn(arg1: *mut tagEXCEPINFO) -> HRESULT>,
    pub scode: SCODE,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagEXCEPINFO"][::std::mem::size_of::<tagEXCEPINFO>() - 32usize];
    ["Alignment of tagEXCEPINFO"][::std::mem::align_of::<tagEXCEPINFO>() - 4usize];
    ["Offset of field: tagEXCEPINFO::wCode"][::std::mem::offset_of!(tagEXCEPINFO, wCode) - 0usize];
    ["Offset of field: tagEXCEPINFO::wReserved"]
        [::std::mem::offset_of!(tagEXCEPINFO, wReserved) - 2usize];
    ["Offset of field: tagEXCEPINFO::bstrSource"]
        [::std::mem::offset_of!(tagEXCEPINFO, bstrSource) - 4usize];
    ["Offset of field: tagEXCEPINFO::bstrDescription"]
        [::std::mem::offset_of!(tagEXCEPINFO, bstrDescription) - 8usize];
    ["Offset of field: tagEXCEPINFO::bstrHelpFile"]
        [::std::mem::offset_of!(tagEXCEPINFO, bstrHelpFile) - 12usize];
    ["Offset of field: tagEXCEPINFO::dwHelpContext"]
        [::std::mem::offset_of!(tagEXCEPINFO, dwHelpContext) - 16usize];
    ["Offset of field: tagEXCEPINFO::pvReserved"]
        [::std::mem::offset_of!(tagEXCEPINFO, pvReserved) - 20usize];
    ["Offset of field: tagEXCEPINFO::pfnDeferredFillIn"]
        [::std::mem::offset_of!(tagEXCEPINFO, pfnDeferredFillIn) - 24usize];
    ["Offset of field: tagEXCEPINFO::scode"][::std::mem::offset_of!(tagEXCEPINFO, scode) - 28usize];
};
pub type EXCEPINFO = tagEXCEPINFO;
pub const tagCALLCONV_CC_FASTCALL: tagCALLCONV = 0;
pub const tagCALLCONV_CC_CDECL: tagCALLCONV = 1;
pub const tagCALLCONV_CC_MSCPASCAL: tagCALLCONV = 2;
pub const tagCALLCONV_CC_PASCAL: tagCALLCONV = 2;
pub const tagCALLCONV_CC_MACPASCAL: tagCALLCONV = 3;
pub const tagCALLCONV_CC_STDCALL: tagCALLCONV = 4;
pub const tagCALLCONV_CC_FPFASTCALL: tagCALLCONV = 5;
pub const tagCALLCONV_CC_SYSCALL: tagCALLCONV = 6;
pub const tagCALLCONV_CC_MPWCDECL: tagCALLCONV = 7;
pub const tagCALLCONV_CC_MPWPASCAL: tagCALLCONV = 8;
pub const tagCALLCONV_CC_MAX: tagCALLCONV = 9;
pub type tagCALLCONV = ::std::os::raw::c_int;
pub use self::tagCALLCONV as CALLCONV;
pub const tagFUNCKIND_FUNC_VIRTUAL: tagFUNCKIND = 0;
pub const tagFUNCKIND_FUNC_PUREVIRTUAL: tagFUNCKIND = 1;
pub const tagFUNCKIND_FUNC_NONVIRTUAL: tagFUNCKIND = 2;
pub const tagFUNCKIND_FUNC_STATIC: tagFUNCKIND = 3;
pub const tagFUNCKIND_FUNC_DISPATCH: tagFUNCKIND = 4;
pub type tagFUNCKIND = ::std::os::raw::c_int;
pub use self::tagFUNCKIND as FUNCKIND;
pub const tagINVOKEKIND_INVOKE_FUNC: tagINVOKEKIND = 1;
pub const tagINVOKEKIND_INVOKE_PROPERTYGET: tagINVOKEKIND = 2;
pub const tagINVOKEKIND_INVOKE_PROPERTYPUT: tagINVOKEKIND = 4;
pub const tagINVOKEKIND_INVOKE_PROPERTYPUTREF: tagINVOKEKIND = 8;
pub type tagINVOKEKIND = ::std::os::raw::c_int;
pub use self::tagINVOKEKIND as INVOKEKIND;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagFUNCDESC {
    pub memid: MEMBERID,
    pub lprgscode: *mut SCODE,
    pub lprgelemdescParam: *mut ELEMDESC,
    pub funckind: FUNCKIND,
    pub invkind: INVOKEKIND,
    pub callconv: CALLCONV,
    pub cParams: SHORT,
    pub cParamsOpt: SHORT,
    pub oVft: SHORT,
    pub cScodes: SHORT,
    pub elemdescFunc: ELEMDESC,
    pub wFuncFlags: WORD,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagFUNCDESC"][::std::mem::size_of::<tagFUNCDESC>() - 52usize];
    ["Alignment of tagFUNCDESC"][::std::mem::align_of::<tagFUNCDESC>() - 4usize];
    ["Offset of field: tagFUNCDESC::memid"][::std::mem::offset_of!(tagFUNCDESC, memid) - 0usize];
    ["Offset of field: tagFUNCDESC::lprgscode"]
        [::std::mem::offset_of!(tagFUNCDESC, lprgscode) - 4usize];
    ["Offset of field: tagFUNCDESC::lprgelemdescParam"]
        [::std::mem::offset_of!(tagFUNCDESC, lprgelemdescParam) - 8usize];
    ["Offset of field: tagFUNCDESC::funckind"]
        [::std::mem::offset_of!(tagFUNCDESC, funckind) - 12usize];
    ["Offset of field: tagFUNCDESC::invkind"]
        [::std::mem::offset_of!(tagFUNCDESC, invkind) - 16usize];
    ["Offset of field: tagFUNCDESC::callconv"]
        [::std::mem::offset_of!(tagFUNCDESC, callconv) - 20usize];
    ["Offset of field: tagFUNCDESC::cParams"]
        [::std::mem::offset_of!(tagFUNCDESC, cParams) - 24usize];
    ["Offset of field: tagFUNCDESC::cParamsOpt"]
        [::std::mem::offset_of!(tagFUNCDESC, cParamsOpt) - 26usize];
    ["Offset of field: tagFUNCDESC::oVft"][::std::mem::offset_of!(tagFUNCDESC, oVft) - 28usize];
    ["Offset of field: tagFUNCDESC::cScodes"]
        [::std::mem::offset_of!(tagFUNCDESC, cScodes) - 30usize];
    ["Offset of field: tagFUNCDESC::elemdescFunc"]
        [::std::mem::offset_of!(tagFUNCDESC, elemdescFunc) - 32usize];
    ["Offset of field: tagFUNCDESC::wFuncFlags"]
        [::std::mem::offset_of!(tagFUNCDESC, wFuncFlags) - 48usize];
};
pub type FUNCDESC = tagFUNCDESC;
pub const tagVARKIND_VAR_PERINSTANCE: tagVARKIND = 0;
pub const tagVARKIND_VAR_STATIC: tagVARKIND = 1;
pub const tagVARKIND_VAR_CONST: tagVARKIND = 2;
pub const tagVARKIND_VAR_DISPATCH: tagVARKIND = 3;
pub type tagVARKIND = ::std::os::raw::c_int;
pub use self::tagVARKIND as VARKIND;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct tagVARDESC {
    pub memid: MEMBERID,
    pub lpstrSchema: LPOLESTR,
    pub __bindgen_anon_1: tagVARDESC__bindgen_ty_1,
    pub elemdescVar: ELEMDESC,
    pub wVarFlags: WORD,
    pub varkind: VARKIND,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagVARDESC__bindgen_ty_1 {
    pub oInst: ULONG,
    pub lpvarValue: *mut VARIANT,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagVARDESC__bindgen_ty_1"]
        [::std::mem::size_of::<tagVARDESC__bindgen_ty_1>() - 4usize];
    ["Alignment of tagVARDESC__bindgen_ty_1"]
        [::std::mem::align_of::<tagVARDESC__bindgen_ty_1>() - 4usize];
    ["Offset of field: tagVARDESC__bindgen_ty_1::oInst"]
        [::std::mem::offset_of!(tagVARDESC__bindgen_ty_1, oInst) - 0usize];
    ["Offset of field: tagVARDESC__bindgen_ty_1::lpvarValue"]
        [::std::mem::offset_of!(tagVARDESC__bindgen_ty_1, lpvarValue) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagVARDESC"][::std::mem::size_of::<tagVARDESC>() - 36usize];
    ["Alignment of tagVARDESC"][::std::mem::align_of::<tagVARDESC>() - 4usize];
    ["Offset of field: tagVARDESC::memid"][::std::mem::offset_of!(tagVARDESC, memid) - 0usize];
    ["Offset of field: tagVARDESC::lpstrSchema"]
        [::std::mem::offset_of!(tagVARDESC, lpstrSchema) - 4usize];
    ["Offset of field: tagVARDESC::elemdescVar"]
        [::std::mem::offset_of!(tagVARDESC, elemdescVar) - 12usize];
    ["Offset of field: tagVARDESC::wVarFlags"]
        [::std::mem::offset_of!(tagVARDESC, wVarFlags) - 28usize];
    ["Offset of field: tagVARDESC::varkind"][::std::mem::offset_of!(tagVARDESC, varkind) - 32usize];
};
pub type VARDESC = tagVARDESC;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct IDispatchVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IDispatch,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut IDispatch) -> ULONG>,
    pub Release: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut IDispatch) -> ULONG>,
    pub GetTypeInfoCount: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IDispatch, pctinfo: *mut UINT) -> HRESULT,
    >,
    pub GetTypeInfo: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IDispatch,
            iTInfo: UINT,
            lcid: LCID,
            ppTInfo: *mut *mut ITypeInfo,
        ) -> HRESULT,
    >,
    pub GetIDsOfNames: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IDispatch,
            riid: *const IID,
            rgszNames: *mut LPOLESTR,
            cNames: UINT,
            lcid: LCID,
            rgDispId: *mut DISPID,
        ) -> HRESULT,
    >,
    pub Invoke: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IDispatch,
            dispIdMember: DISPID,
            riid: *const IID,
            lcid: LCID,
            wFlags: WORD,
            pDispParams: *mut DISPPARAMS,
            pVarResult: *mut VARIANT,
            pExcepInfo: *mut EXCEPINFO,
            puArgErr: *mut UINT,
        ) -> HRESULT,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of IDispatchVtbl"][::std::mem::size_of::<IDispatchVtbl>() - 28usize];
    ["Alignment of IDispatchVtbl"][::std::mem::align_of::<IDispatchVtbl>() - 4usize];
    ["Offset of field: IDispatchVtbl::QueryInterface"]
        [::std::mem::offset_of!(IDispatchVtbl, QueryInterface) - 0usize];
    ["Offset of field: IDispatchVtbl::AddRef"]
        [::std::mem::offset_of!(IDispatchVtbl, AddRef) - 4usize];
    ["Offset of field: IDispatchVtbl::Release"]
        [::std::mem::offset_of!(IDispatchVtbl, Release) - 8usize];
    ["Offset of field: IDispatchVtbl::GetTypeInfoCount"]
        [::std::mem::offset_of!(IDispatchVtbl, GetTypeInfoCount) - 12usize];
    ["Offset of field: IDispatchVtbl::GetTypeInfo"]
        [::std::mem::offset_of!(IDispatchVtbl, GetTypeInfo) - 16usize];
    ["Offset of field: IDispatchVtbl::GetIDsOfNames"]
        [::std::mem::offset_of!(IDispatchVtbl, GetIDsOfNames) - 20usize];
    ["Offset of field: IDispatchVtbl::Invoke"]
        [::std::mem::offset_of!(IDispatchVtbl, Invoke) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IDispatch {
    pub lpVtbl: *mut IDispatchVtbl,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of IDispatch"][::std::mem::size_of::<IDispatch>() - 4usize];
    ["Alignment of IDispatch"][::std::mem::align_of::<IDispatch>() - 4usize];
    ["Offset of field: IDispatch::lpVtbl"][::std::mem::offset_of!(IDispatch, lpVtbl) - 0usize];
};
pub const tagDESCKIND_DESCKIND_NONE: tagDESCKIND = 0;
pub const tagDESCKIND_DESCKIND_FUNCDESC: tagDESCKIND = 1;
pub const tagDESCKIND_DESCKIND_VARDESC: tagDESCKIND = 2;
pub const tagDESCKIND_DESCKIND_TYPECOMP: tagDESCKIND = 3;
pub const tagDESCKIND_DESCKIND_IMPLICITAPPOBJ: tagDESCKIND = 4;
pub const tagDESCKIND_DESCKIND_MAX: tagDESCKIND = 5;
pub type tagDESCKIND = ::std::os::raw::c_int;
pub use self::tagDESCKIND as DESCKIND;
#[repr(C)]
#[derive(Copy, Clone)]
pub union tagBINDPTR {
    pub lpfuncdesc: *mut FUNCDESC,
    pub lpvardesc: *mut VARDESC,
    pub lptcomp: *mut ITypeComp,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagBINDPTR"][::std::mem::size_of::<tagBINDPTR>() - 4usize];
    ["Alignment of tagBINDPTR"][::std::mem::align_of::<tagBINDPTR>() - 4usize];
    ["Offset of field: tagBINDPTR::lpfuncdesc"]
        [::std::mem::offset_of!(tagBINDPTR, lpfuncdesc) - 0usize];
    ["Offset of field: tagBINDPTR::lpvardesc"]
        [::std::mem::offset_of!(tagBINDPTR, lpvardesc) - 0usize];
    ["Offset of field: tagBINDPTR::lptcomp"][::std::mem::offset_of!(tagBINDPTR, lptcomp) - 0usize];
};
pub type BINDPTR = tagBINDPTR;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct ITypeCompVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeComp,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut ITypeComp) -> ULONG>,
    pub Release: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut ITypeComp) -> ULONG>,
    pub Bind: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeComp,
            szName: LPOLESTR,
            lHashVal: ULONG,
            wFlags: WORD,
            ppTInfo: *mut *mut ITypeInfo,
            pDescKind: *mut DESCKIND,
            pBindPtr: *mut BINDPTR,
        ) -> HRESULT,
    >,
    pub BindType: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeComp,
            szName: LPOLESTR,
            lHashVal: ULONG,
            ppTInfo: *mut *mut ITypeInfo,
            ppTComp: *mut *mut ITypeComp,
        ) -> HRESULT,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ITypeCompVtbl"][::std::mem::size_of::<ITypeCompVtbl>() - 20usize];
    ["Alignment of ITypeCompVtbl"][::std::mem::align_of::<ITypeCompVtbl>() - 4usize];
    ["Offset of field: ITypeCompVtbl::QueryInterface"]
        [::std::mem::offset_of!(ITypeCompVtbl, QueryInterface) - 0usize];
    ["Offset of field: ITypeCompVtbl::AddRef"]
        [::std::mem::offset_of!(ITypeCompVtbl, AddRef) - 4usize];
    ["Offset of field: ITypeCompVtbl::Release"]
        [::std::mem::offset_of!(ITypeCompVtbl, Release) - 8usize];
    ["Offset of field: ITypeCompVtbl::Bind"][::std::mem::offset_of!(ITypeCompVtbl, Bind) - 12usize];
    ["Offset of field: ITypeCompVtbl::BindType"]
        [::std::mem::offset_of!(ITypeCompVtbl, BindType) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ITypeComp {
    pub lpVtbl: *mut ITypeCompVtbl,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ITypeComp"][::std::mem::size_of::<ITypeComp>() - 4usize];
    ["Alignment of ITypeComp"][::std::mem::align_of::<ITypeComp>() - 4usize];
    ["Offset of field: ITypeComp::lpVtbl"][::std::mem::offset_of!(ITypeComp, lpVtbl) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct ITypeInfoVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut ITypeInfo) -> ULONG>,
    pub Release: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut ITypeInfo) -> ULONG>,
    pub GetTypeAttr: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeInfo, ppTypeAttr: *mut *mut TYPEATTR) -> HRESULT,
    >,
    pub GetTypeComp: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeInfo, ppTComp: *mut *mut ITypeComp) -> HRESULT,
    >,
    pub GetFuncDesc: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            index: UINT,
            ppFuncDesc: *mut *mut FUNCDESC,
        ) -> HRESULT,
    >,
    pub GetVarDesc: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            index: UINT,
            ppVarDesc: *mut *mut VARDESC,
        ) -> HRESULT,
    >,
    pub GetNames: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            memid: MEMBERID,
            rgBstrNames: *mut BSTR,
            cMaxNames: UINT,
            pcNames: *mut UINT,
        ) -> HRESULT,
    >,
    pub GetRefTypeOfImplType: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            index: UINT,
            pRefType: *mut HREFTYPE,
        ) -> HRESULT,
    >,
    pub GetImplTypeFlags: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            index: UINT,
            pImplTypeFlags: *mut INT,
        ) -> HRESULT,
    >,
    pub GetIDsOfNames: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            rgszNames: *mut LPOLESTR,
            cNames: UINT,
            pMemId: *mut MEMBERID,
        ) -> HRESULT,
    >,
    pub Invoke: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            pvInstance: PVOID,
            memid: MEMBERID,
            wFlags: WORD,
            pDispParams: *mut DISPPARAMS,
            pVarResult: *mut VARIANT,
            pExcepInfo: *mut EXCEPINFO,
            puArgErr: *mut UINT,
        ) -> HRESULT,
    >,
    pub GetDocumentation: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            memid: MEMBERID,
            pBstrName: *mut BSTR,
            pBstrDocString: *mut BSTR,
            pdwHelpContext: *mut DWORD,
            pBstrHelpFile: *mut BSTR,
        ) -> HRESULT,
    >,
    pub GetDllEntry: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            memid: MEMBERID,
            invKind: INVOKEKIND,
            pBstrDllName: *mut BSTR,
            pBstrName: *mut BSTR,
            pwOrdinal: *mut WORD,
        ) -> HRESULT,
    >,
    pub GetRefTypeInfo: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            hRefType: HREFTYPE,
            ppTInfo: *mut *mut ITypeInfo,
        ) -> HRESULT,
    >,
    pub AddressOfMember: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            memid: MEMBERID,
            invKind: INVOKEKIND,
            ppv: *mut PVOID,
        ) -> HRESULT,
    >,
    pub CreateInstance: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            pUnkOuter: *mut IUnknown,
            riid: *const IID,
            ppvObj: *mut PVOID,
        ) -> HRESULT,
    >,
    pub GetMops: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            memid: MEMBERID,
            pBstrMops: *mut BSTR,
        ) -> HRESULT,
    >,
    pub GetContainingTypeLib: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeInfo,
            ppTLib: *mut *mut ITypeLib,
            pIndex: *mut UINT,
        ) -> HRESULT,
    >,
    pub ReleaseTypeAttr: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeInfo, pTypeAttr: *mut TYPEATTR),
    >,
    pub ReleaseFuncDesc: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeInfo, pFuncDesc: *mut FUNCDESC),
    >,
    pub ReleaseVarDesc: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeInfo, pVarDesc: *mut VARDESC),
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ITypeInfoVtbl"][::std::mem::size_of::<ITypeInfoVtbl>() - 88usize];
    ["Alignment of ITypeInfoVtbl"][::std::mem::align_of::<ITypeInfoVtbl>() - 4usize];
    ["Offset of field: ITypeInfoVtbl::QueryInterface"]
        [::std::mem::offset_of!(ITypeInfoVtbl, QueryInterface) - 0usize];
    ["Offset of field: ITypeInfoVtbl::AddRef"]
        [::std::mem::offset_of!(ITypeInfoVtbl, AddRef) - 4usize];
    ["Offset of field: ITypeInfoVtbl::Release"]
        [::std::mem::offset_of!(ITypeInfoVtbl, Release) - 8usize];
    ["Offset of field: ITypeInfoVtbl::GetTypeAttr"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetTypeAttr) - 12usize];
    ["Offset of field: ITypeInfoVtbl::GetTypeComp"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetTypeComp) - 16usize];
    ["Offset of field: ITypeInfoVtbl::GetFuncDesc"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetFuncDesc) - 20usize];
    ["Offset of field: ITypeInfoVtbl::GetVarDesc"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetVarDesc) - 24usize];
    ["Offset of field: ITypeInfoVtbl::GetNames"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetNames) - 28usize];
    ["Offset of field: ITypeInfoVtbl::GetRefTypeOfImplType"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetRefTypeOfImplType) - 32usize];
    ["Offset of field: ITypeInfoVtbl::GetImplTypeFlags"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetImplTypeFlags) - 36usize];
    ["Offset of field: ITypeInfoVtbl::GetIDsOfNames"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetIDsOfNames) - 40usize];
    ["Offset of field: ITypeInfoVtbl::Invoke"]
        [::std::mem::offset_of!(ITypeInfoVtbl, Invoke) - 44usize];
    ["Offset of field: ITypeInfoVtbl::GetDocumentation"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetDocumentation) - 48usize];
    ["Offset of field: ITypeInfoVtbl::GetDllEntry"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetDllEntry) - 52usize];
    ["Offset of field: ITypeInfoVtbl::GetRefTypeInfo"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetRefTypeInfo) - 56usize];
    ["Offset of field: ITypeInfoVtbl::AddressOfMember"]
        [::std::mem::offset_of!(ITypeInfoVtbl, AddressOfMember) - 60usize];
    ["Offset of field: ITypeInfoVtbl::CreateInstance"]
        [::std::mem::offset_of!(ITypeInfoVtbl, CreateInstance) - 64usize];
    ["Offset of field: ITypeInfoVtbl::GetMops"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetMops) - 68usize];
    ["Offset of field: ITypeInfoVtbl::GetContainingTypeLib"]
        [::std::mem::offset_of!(ITypeInfoVtbl, GetContainingTypeLib) - 72usize];
    ["Offset of field: ITypeInfoVtbl::ReleaseTypeAttr"]
        [::std::mem::offset_of!(ITypeInfoVtbl, ReleaseTypeAttr) - 76usize];
    ["Offset of field: ITypeInfoVtbl::ReleaseFuncDesc"]
        [::std::mem::offset_of!(ITypeInfoVtbl, ReleaseFuncDesc) - 80usize];
    ["Offset of field: ITypeInfoVtbl::ReleaseVarDesc"]
        [::std::mem::offset_of!(ITypeInfoVtbl, ReleaseVarDesc) - 84usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ITypeInfo {
    pub lpVtbl: *mut ITypeInfoVtbl,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ITypeInfo"][::std::mem::size_of::<ITypeInfo>() - 4usize];
    ["Alignment of ITypeInfo"][::std::mem::align_of::<ITypeInfo>() - 4usize];
    ["Offset of field: ITypeInfo::lpVtbl"][::std::mem::offset_of!(ITypeInfo, lpVtbl) - 0usize];
};
pub const tagSYSKIND_SYS_WIN16: tagSYSKIND = 0;
pub const tagSYSKIND_SYS_WIN32: tagSYSKIND = 1;
pub const tagSYSKIND_SYS_MAC: tagSYSKIND = 2;
pub const tagSYSKIND_SYS_WIN64: tagSYSKIND = 3;
pub type tagSYSKIND = ::std::os::raw::c_int;
pub use self::tagSYSKIND as SYSKIND;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct tagTLIBATTR {
    pub guid: GUID,
    pub lcid: LCID,
    pub syskind: SYSKIND,
    pub wMajorVerNum: WORD,
    pub wMinorVerNum: WORD,
    pub wLibFlags: WORD,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of tagTLIBATTR"][::std::mem::size_of::<tagTLIBATTR>() - 32usize];
    ["Alignment of tagTLIBATTR"][::std::mem::align_of::<tagTLIBATTR>() - 4usize];
    ["Offset of field: tagTLIBATTR::guid"][::std::mem::offset_of!(tagTLIBATTR, guid) - 0usize];
    ["Offset of field: tagTLIBATTR::lcid"][::std::mem::offset_of!(tagTLIBATTR, lcid) - 16usize];
    ["Offset of field: tagTLIBATTR::syskind"]
        [::std::mem::offset_of!(tagTLIBATTR, syskind) - 20usize];
    ["Offset of field: tagTLIBATTR::wMajorVerNum"]
        [::std::mem::offset_of!(tagTLIBATTR, wMajorVerNum) - 24usize];
    ["Offset of field: tagTLIBATTR::wMinorVerNum"]
        [::std::mem::offset_of!(tagTLIBATTR, wMinorVerNum) - 26usize];
    ["Offset of field: tagTLIBATTR::wLibFlags"]
        [::std::mem::offset_of!(tagTLIBATTR, wLibFlags) - 28usize];
};
pub type TLIBATTR = tagTLIBATTR;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct ITypeLibVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeLib,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut ITypeLib) -> ULONG>,
    pub Release: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut ITypeLib) -> ULONG>,
    pub GetTypeInfoCount:
        ::std::option::Option<unsafe extern "stdcall" fn(This: *mut ITypeLib) -> UINT>,
    pub GetTypeInfo: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeLib,
            index: UINT,
            ppTInfo: *mut *mut ITypeInfo,
        ) -> HRESULT,
    >,
    pub GetTypeInfoType: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeLib,
            index: UINT,
            pTKind: *mut TYPEKIND,
        ) -> HRESULT,
    >,
    pub GetTypeInfoOfGuid: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeLib,
            guid: *const GUID,
            ppTinfo: *mut *mut ITypeInfo,
        ) -> HRESULT,
    >,
    pub GetLibAttr: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeLib, ppTLibAttr: *mut *mut TLIBATTR) -> HRESULT,
    >,
    pub GetTypeComp: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeLib, ppTComp: *mut *mut ITypeComp) -> HRESULT,
    >,
    pub GetDocumentation: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeLib,
            index: INT,
            pBstrName: *mut BSTR,
            pBstrDocString: *mut BSTR,
            pdwHelpContext: *mut DWORD,
            pBstrHelpFile: *mut BSTR,
        ) -> HRESULT,
    >,
    pub IsName: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeLib,
            szNameBuf: LPOLESTR,
            lHashVal: ULONG,
            pfName: *mut BOOL,
        ) -> HRESULT,
    >,
    pub FindName: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut ITypeLib,
            szNameBuf: LPOLESTR,
            lHashVal: ULONG,
            ppTInfo: *mut *mut ITypeInfo,
            rgMemId: *mut MEMBERID,
            pcFound: *mut USHORT,
        ) -> HRESULT,
    >,
    pub ReleaseTLibAttr: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut ITypeLib, pTLibAttr: *mut TLIBATTR),
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ITypeLibVtbl"][::std::mem::size_of::<ITypeLibVtbl>() - 52usize];
    ["Alignment of ITypeLibVtbl"][::std::mem::align_of::<ITypeLibVtbl>() - 4usize];
    ["Offset of field: ITypeLibVtbl::QueryInterface"]
        [::std::mem::offset_of!(ITypeLibVtbl, QueryInterface) - 0usize];
    ["Offset of field: ITypeLibVtbl::AddRef"]
        [::std::mem::offset_of!(ITypeLibVtbl, AddRef) - 4usize];
    ["Offset of field: ITypeLibVtbl::Release"]
        [::std::mem::offset_of!(ITypeLibVtbl, Release) - 8usize];
    ["Offset of field: ITypeLibVtbl::GetTypeInfoCount"]
        [::std::mem::offset_of!(ITypeLibVtbl, GetTypeInfoCount) - 12usize];
    ["Offset of field: ITypeLibVtbl::GetTypeInfo"]
        [::std::mem::offset_of!(ITypeLibVtbl, GetTypeInfo) - 16usize];
    ["Offset of field: ITypeLibVtbl::GetTypeInfoType"]
        [::std::mem::offset_of!(ITypeLibVtbl, GetTypeInfoType) - 20usize];
    ["Offset of field: ITypeLibVtbl::GetTypeInfoOfGuid"]
        [::std::mem::offset_of!(ITypeLibVtbl, GetTypeInfoOfGuid) - 24usize];
    ["Offset of field: ITypeLibVtbl::GetLibAttr"]
        [::std::mem::offset_of!(ITypeLibVtbl, GetLibAttr) - 28usize];
    ["Offset of field: ITypeLibVtbl::GetTypeComp"]
        [::std::mem::offset_of!(ITypeLibVtbl, GetTypeComp) - 32usize];
    ["Offset of field: ITypeLibVtbl::GetDocumentation"]
        [::std::mem::offset_of!(ITypeLibVtbl, GetDocumentation) - 36usize];
    ["Offset of field: ITypeLibVtbl::IsName"]
        [::std::mem::offset_of!(ITypeLibVtbl, IsName) - 40usize];
    ["Offset of field: ITypeLibVtbl::FindName"]
        [::std::mem::offset_of!(ITypeLibVtbl, FindName) - 44usize];
    ["Offset of field: ITypeLibVtbl::ReleaseTLibAttr"]
        [::std::mem::offset_of!(ITypeLibVtbl, ReleaseTLibAttr) - 48usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ITypeLib {
    pub lpVtbl: *mut ITypeLibVtbl,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ITypeLib"][::std::mem::size_of::<ITypeLib>() - 4usize];
    ["Alignment of ITypeLib"][::std::mem::align_of::<ITypeLib>() - 4usize];
    ["Offset of field: ITypeLib::lpVtbl"][::std::mem::offset_of!(ITypeLib, lpVtbl) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct IRecordInfoVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut IRecordInfo) -> ULONG>,
    pub Release: ::std::option::Option<unsafe extern "stdcall" fn(This: *mut IRecordInfo) -> ULONG>,
    pub RecordInit: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IRecordInfo, pvNew: PVOID) -> HRESULT,
    >,
    pub RecordClear: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IRecordInfo, pvExisting: PVOID) -> HRESULT,
    >,
    pub RecordCopy: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            pvExisting: PVOID,
            pvNew: PVOID,
        ) -> HRESULT,
    >,
    pub GetGuid: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IRecordInfo, pguid: *mut GUID) -> HRESULT,
    >,
    pub GetName: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IRecordInfo, pbstrName: *mut BSTR) -> HRESULT,
    >,
    pub GetSize: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IRecordInfo, pcbSize: *mut ULONG) -> HRESULT,
    >,
    pub GetTypeInfo: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            ppTypeInfo: *mut *mut ITypeInfo,
        ) -> HRESULT,
    >,
    pub GetField: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            pvData: PVOID,
            szFieldName: LPCOLESTR,
            pvarField: *mut VARIANT,
        ) -> HRESULT,
    >,
    pub GetFieldNoCopy: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            pvData: PVOID,
            szFieldName: LPCOLESTR,
            pvarField: *mut VARIANT,
            ppvDataCArray: *mut PVOID,
        ) -> HRESULT,
    >,
    pub PutField: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            wFlags: ULONG,
            pvData: PVOID,
            szFieldName: LPCOLESTR,
            pvarField: *mut VARIANT,
        ) -> HRESULT,
    >,
    pub PutFieldNoCopy: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            wFlags: ULONG,
            pvData: PVOID,
            szFieldName: LPCOLESTR,
            pvarField: *mut VARIANT,
        ) -> HRESULT,
    >,
    pub GetFieldNames: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            pcNames: *mut ULONG,
            rgBstrNames: *mut BSTR,
        ) -> HRESULT,
    >,
    pub IsMatchingType: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IRecordInfo, pRecordInfo: *mut IRecordInfo) -> BOOL,
    >,
    pub RecordCreate:
        ::std::option::Option<unsafe extern "stdcall" fn(This: *mut IRecordInfo) -> PVOID>,
    pub RecordCreateCopy: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut IRecordInfo,
            pvSource: PVOID,
            ppvDest: *mut PVOID,
        ) -> HRESULT,
    >,
    pub RecordDestroy: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut IRecordInfo, pvRecord: PVOID) -> HRESULT,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of IRecordInfoVtbl"][::std::mem::size_of::<IRecordInfoVtbl>() - 76usize];
    ["Alignment of IRecordInfoVtbl"][::std::mem::align_of::<IRecordInfoVtbl>() - 4usize];
    ["Offset of field: IRecordInfoVtbl::QueryInterface"]
        [::std::mem::offset_of!(IRecordInfoVtbl, QueryInterface) - 0usize];
    ["Offset of field: IRecordInfoVtbl::AddRef"]
        [::std::mem::offset_of!(IRecordInfoVtbl, AddRef) - 4usize];
    ["Offset of field: IRecordInfoVtbl::Release"]
        [::std::mem::offset_of!(IRecordInfoVtbl, Release) - 8usize];
    ["Offset of field: IRecordInfoVtbl::RecordInit"]
        [::std::mem::offset_of!(IRecordInfoVtbl, RecordInit) - 12usize];
    ["Offset of field: IRecordInfoVtbl::RecordClear"]
        [::std::mem::offset_of!(IRecordInfoVtbl, RecordClear) - 16usize];
    ["Offset of field: IRecordInfoVtbl::RecordCopy"]
        [::std::mem::offset_of!(IRecordInfoVtbl, RecordCopy) - 20usize];
    ["Offset of field: IRecordInfoVtbl::GetGuid"]
        [::std::mem::offset_of!(IRecordInfoVtbl, GetGuid) - 24usize];
    ["Offset of field: IRecordInfoVtbl::GetName"]
        [::std::mem::offset_of!(IRecordInfoVtbl, GetName) - 28usize];
    ["Offset of field: IRecordInfoVtbl::GetSize"]
        [::std::mem::offset_of!(IRecordInfoVtbl, GetSize) - 32usize];
    ["Offset of field: IRecordInfoVtbl::GetTypeInfo"]
        [::std::mem::offset_of!(IRecordInfoVtbl, GetTypeInfo) - 36usize];
    ["Offset of field: IRecordInfoVtbl::GetField"]
        [::std::mem::offset_of!(IRecordInfoVtbl, GetField) - 40usize];
    ["Offset of field: IRecordInfoVtbl::GetFieldNoCopy"]
        [::std::mem::offset_of!(IRecordInfoVtbl, GetFieldNoCopy) - 44usize];
    ["Offset of field: IRecordInfoVtbl::PutField"]
        [::std::mem::offset_of!(IRecordInfoVtbl, PutField) - 48usize];
    ["Offset of field: IRecordInfoVtbl::PutFieldNoCopy"]
        [::std::mem::offset_of!(IRecordInfoVtbl, PutFieldNoCopy) - 52usize];
    ["Offset of field: IRecordInfoVtbl::GetFieldNames"]
        [::std::mem::offset_of!(IRecordInfoVtbl, GetFieldNames) - 56usize];
    ["Offset of field: IRecordInfoVtbl::IsMatchingType"]
        [::std::mem::offset_of!(IRecordInfoVtbl, IsMatchingType) - 60usize];
    ["Offset of field: IRecordInfoVtbl::RecordCreate"]
        [::std::mem::offset_of!(IRecordInfoVtbl, RecordCreate) - 64usize];
    ["Offset of field: IRecordInfoVtbl::RecordCreateCopy"]
        [::std::mem::offset_of!(IRecordInfoVtbl, RecordCreateCopy) - 68usize];
    ["Offset of field: IRecordInfoVtbl::RecordDestroy"]
        [::std::mem::offset_of!(IRecordInfoVtbl, RecordDestroy) - 72usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IRecordInfo {
    pub lpVtbl: *mut IRecordInfoVtbl,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of IRecordInfo"][::std::mem::size_of::<IRecordInfo>() - 4usize];
    ["Alignment of IRecordInfo"][::std::mem::align_of::<IRecordInfo>() - 4usize];
    ["Offset of field: IRecordInfo::lpVtbl"][::std::mem::offset_of!(IRecordInfo, lpVtbl) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub struct _ICChatFrameEventsVtbl {
    pub QueryInterface: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut _ICChatFrameEvents,
            riid: *const IID,
            ppvObject: *mut *mut ::std::os::raw::c_void,
        ) -> HRESULT,
    >,
    pub AddRef:
        ::std::option::Option<unsafe extern "stdcall" fn(This: *mut _ICChatFrameEvents) -> ULONG>,
    pub Release:
        ::std::option::Option<unsafe extern "stdcall" fn(This: *mut _ICChatFrameEvents) -> ULONG>,
    pub GetTypeInfoCount: ::std::option::Option<
        unsafe extern "stdcall" fn(This: *mut _ICChatFrameEvents, pctinfo: *mut UINT) -> HRESULT,
    >,
    pub GetTypeInfo: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut _ICChatFrameEvents,
            iTInfo: UINT,
            lcid: LCID,
            ppTInfo: *mut *mut ITypeInfo,
        ) -> HRESULT,
    >,
    pub GetIDsOfNames: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut _ICChatFrameEvents,
            riid: *const IID,
            rgszNames: *mut LPOLESTR,
            cNames: UINT,
            lcid: LCID,
            rgDispId: *mut DISPID,
        ) -> HRESULT,
    >,
    pub Invoke: ::std::option::Option<
        unsafe extern "stdcall" fn(
            This: *mut _ICChatFrameEvents,
            dispIdMember: DISPID,
            riid: *const IID,
            lcid: LCID,
            wFlags: WORD,
            pDispParams: *mut DISPPARAMS,
            pVarResult: *mut VARIANT,
            pExcepInfo: *mut EXCEPINFO,
            puArgErr: *mut UINT,
        ) -> HRESULT,
    >,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _ICChatFrameEventsVtbl"][::std::mem::size_of::<_ICChatFrameEventsVtbl>() - 28usize];
    ["Alignment of _ICChatFrameEventsVtbl"]
        [::std::mem::align_of::<_ICChatFrameEventsVtbl>() - 4usize];
    ["Offset of field: _ICChatFrameEventsVtbl::QueryInterface"]
        [::std::mem::offset_of!(_ICChatFrameEventsVtbl, QueryInterface) - 0usize];
    ["Offset of field: _ICChatFrameEventsVtbl::AddRef"]
        [::std::mem::offset_of!(_ICChatFrameEventsVtbl, AddRef) - 4usize];
    ["Offset of field: _ICChatFrameEventsVtbl::Release"]
        [::std::mem::offset_of!(_ICChatFrameEventsVtbl, Release) - 8usize];
    ["Offset of field: _ICChatFrameEventsVtbl::GetTypeInfoCount"]
        [::std::mem::offset_of!(_ICChatFrameEventsVtbl, GetTypeInfoCount) - 12usize];
    ["Offset of field: _ICChatFrameEventsVtbl::GetTypeInfo"]
        [::std::mem::offset_of!(_ICChatFrameEventsVtbl, GetTypeInfo) - 16usize];
    ["Offset of field: _ICChatFrameEventsVtbl::GetIDsOfNames"]
        [::std::mem::offset_of!(_ICChatFrameEventsVtbl, GetIDsOfNames) - 20usize];
    ["Offset of field: _ICChatFrameEventsVtbl::Invoke"]
        [::std::mem::offset_of!(_ICChatFrameEventsVtbl, Invoke) - 24usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _ICChatFrameEvents {
    pub lpVtbl: *mut _ICChatFrameEventsVtbl,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _ICChatFrameEvents"][::std::mem::size_of::<_ICChatFrameEvents>() - 4usize];
    ["Alignment of _ICChatFrameEvents"][::std::mem::align_of::<_ICChatFrameEvents>() - 4usize];
    ["Offset of field: _ICChatFrameEvents::lpVtbl"]
        [::std::mem::offset_of!(_ICChatFrameEvents, lpVtbl) - 0usize];
};
